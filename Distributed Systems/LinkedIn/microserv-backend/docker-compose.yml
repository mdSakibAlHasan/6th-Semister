version: "3.8"
services:
  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - internalnet
    depends_on:
      - post_server
      - user_server
      - notification_server

  forntent:
    image: forntent
    build: ./../forntent
    restart: unless-stopped
    networks:
      - internalnet
    ports:
      - "3000:3000"
    expose:
      - "3000"
    depends_on:
      - nginx


  mysql_user:
    image: mysql:8.0
    container_name: mysql-container1
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: likedin
      MYSQL_USER: sakib
      MYSQL_PASSWORD: password
      MYSQL_TCP_PORT: 3307
    ports:
      - "3307:3307"
    expose:
      - "3307"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=caching_sha2_password
    networks:
      - internalnet

  mysql_post:
    image: mysql:8.0
    container_name: mysql-post-container1
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: likedin
      MYSQL_USER: sakib
      MYSQL_PASSWORD: password
      MYSQL_TCP_PORT: 3308
    ports:
      - "3308:3308"
    expose:
      - "3308"
    volumes:
      - ./init_post.sql:/docker-entrypoint-initdb.d/init_post.sql
    command: --default-authentication-plugin=caching_sha2_password
    networks:
      - internalnet

  mysql_notification:
    image: mysql:8.0
    container_name: mysql-notification-container1
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: likedin
      MYSQL_USER: sakib
      MYSQL_PASSWORD: password
      MYSQL_TCP_PORT: 3309
    ports:
      - "3309:3309"
    expose:
      - "3309"
    volumes:
      - ./init_notification.sql:/docker-entrypoint-initdb.d/init_notification.sql
    command: --default-authentication-plugin=caching_sha2_password
    networks:
      - internalnet

  postobj:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data
    networks:
      - internalnet
    environment:
      MINIO_ROOT_USER: 44Ede1q8sa8uRHXBZ52K
      MINIO_ROOT_PASSWORD: 8H5S84ijB5wRES2YgTRELVowwNj4mLk8ZiYV2kkr
    command: server --console-address ":9001" /data
    

  user_server:
    image: user_service
    build: ./user-service
    restart: unless-stopped
    depends_on:
      - mysql_user
    networks:
      - internalnet
    ports:
      - "3005:3005"
    expose:
      - "3005"
    command: ["./wait-for-mysql.sh", "mysql-container1:3307", "npm", "start"]
    

  post_server:
    image: post_service
    build: ./Post_service
    restart: unless-stopped
    depends_on:
      - mysql_post
    networks:
      - internalnet
    ports:
      - "3006:3006"
    expose:
      - "3006"
    command: ["./wait-for-mysql.sh", "mysql-post-container1:3308", "npm", "start"]

  notification_server:
    image: notification_service
    build: ./notification
    restart: unless-stopped
    depends_on:
      - mysql_notification
    networks:
      - internalnet
    ports:
      - "3007:3007"
    expose:
      - "3007"
    command: ["./wait-for-mysql.sh", "mysql-notification-container1:3309", "npm", "start"]

networks:
  internalnet:
    driver: bridge

volumes:
  minio_storage: {}
